xlab="Body Weight", ylab="Heart Weight")
abline(coef(model), lty = 2)
plot(y=cats$Hwt, x=cats$Bwt, main="Scatterplot of Cats Dataset",
xlab="Body Weight", ylab="Heart Weight")
abline(coef(model), lty = 2)
plot(model$fitted, model$residuals,
xlab = "Fitted Values", ylab = "Residual Values",
main = "Residual Plot for Cats Dataset")
abline(h = 0, lty = 2)
intercept_cl = model$coefficients[1] + 0.6923 * c(1.96,-1.96)
intercept_cl
# We are 95% confident that the intercept lies in (1.000246, -1.713570)
Bwt_cl = model$coefficients[2] + 0.2503 * c(1.96, -1.96)
Bwt_cl
beta0_cl = model$coefficients[1] + 0.6923 * c(1.96,-1.96)
beta0_cl
# We are 95% confident that the intercept lies in (1.000246, -1.713570)
beta1_cl = model$coefficients[2] + 0.2503 * c(1.96, -1.96)
beta1_cl
beta1_cl = model$coefficients[2] + 0.2503 * c(1.96, -1.96)
beta1_cl
# We are 95% confident that beta0 is within the range of (4.524651, 3.543475)
plot(cats, xlab = "Speed in MPH", ylab = "Distance in Feet",
main = "Scatterplot of Cars Dataset")
abline(model, lty = 2)
abline(model, lty = 2)
plot(cats, xlab = "HeartWeight", ylab = "Cat Weight",
main = "Scatterplot of Cats Dataset")
abline(model, lty = 2)
g = ggplot(data, aes(x=cats$Hwt, y=cats$Bwt))
g+geom_point()
plot(model$fitted, model$residuals,
xlab = "Fitted Values", ylab = "Residual Values",
main = "Residual Plot for Cars Dataset")
abline(h = 0, lty = 2)
plot(model$fitted, model$residuals,
xlab = "Fitted Values", ylab = "Residual Values",
main = "Residual Plot for Cats Dataset")
abline(h = 0, lty = 2)
qqnorm(model$residuals)
qqline(model$residuals)
plot(y=cats$Hwt, x=cats$Bwt, main="Scatterplot of Cats Dataset",
xlab="Body Weight (kg)", ylab="Heart Weight (g)")
abline(coef(model), lty = 2)
lines(newdata$Bwt, conf.band[, 2], col = "blue") #Plotting the lower confidence band.
lines(newdata$Bwt, conf.band[, 3], col = "blue") #Plotting the upper confidence band.
lines(newdata$Bwt, pred.band[, 2], col = "red") #Plotting the lower prediction band.
lines(newdata$Bwt, pred.band[, 3], col = "red") #Plotting the upper prediction band.
legend("topleft", c("Regression Line", "Conf. Band", "Pred. Band"),
lty = c(2, 1, 1), col = c("black", "blue", "red"))
plot(y=cats$Hwt, x=cats$Bwt, main="Scatterplot of Cats Dataset",
xlab="Body Weight", ylab="Heart Weight")
abline(coef(model), lty = 2)
lines(newdata$Bwt, conf.band[, 2], col = "blue") #Plotting the lower confidence band.
lines(newdata$Bwt, conf.band[, 3], col = "blue") #Plotting the upper confidence band.
lines(newdata$Bwt, pred.band[, 2], col = "red") #Plotting the lower prediction band.
lines(newdata$Bwt, pred.band[, 3], col = "red") #Plotting the upper prediction band.
legend("topleft", c("Regression Line", "Conf. Band", "Pred. Band"),
lty = c(2, 1, 1), col = c("black", "blue", "red"))
library(MASS)
library(ggplot2)
# Question 1a. ------------------------------------------------------------
cats
g = ggplot(data, aes(x=cats$Hwt, y=cats$Bwt))
g+geom_point()
# Yes the data looks like it would be a good fit for simple linear regression because
# there seems to be a positive linear relationship with an even variance throughout the data.
# Note that the point on the far top right may be an influential point for the linear model.
# Question 1b. ------------------------------------------------------------
model = lm(Hwt ~ Bwt, data = cats)
#Manual calculation of simple linear regression coefficients.
## y=b1x+b0
beta1 = sum((cats$Hwt - mean(cats$Hwt)) * (cats$Bwt - mean(cats$Bwt))) /
sum((cats$Hwt - mean(cats$Hwt))^2)
beta0 = mean(cats$Bwt) - beta1*mean(cats$Hwt)
## y=0.16x+1.02
## This shows that at x=0, the Hwt is at 0.16 and we grow by 1.02 per unit of x.
summary(model)
## Since the Bwt has an extremely low p value (<2e-16) The beta1 coefficient is significant.
## However, beta 0 is insignificant with a .607 p value.
## Since the F-statistic's p-value is extremely small (2.2e-16), we can conclude that the overall
## regression is significant. This supports that the beta1 is significant.
## The RSE is 1.452. This means that on average the errors fall 1.452 away from the model.
## r^2 is 0.6466. That means that ~65% of the points can be explained by the model.
# Question 3. --------------------------------------------------------------
plot(y=cats$Hwt, x=cats$Bwt, main="Scatterplot of Cats Dataset",
xlab="Body Weight", ylab="Heart Weight")
abline(coef(model), lty = 2)
# Question 4. -------------------------------------------------------------
plot(model$fitted, model$residuals,
xlab = "Fitted Values", ylab = "Residual Values",
main = "Residual Plot for Cats Dataset")
abline(h = 0, lty = 2)
## The residuals seem normal; the maximum residual is at the far right with ~4.
# Question 5. -------------------------------------------------------------
beta0_cl = model$coefficients[1] + 0.6923 * c(1.96,-1.96)
beta0_cl
# We are 95% confident that beta0 is within the range of (1.000246, -1.713570)
beta1_cl = model$coefficients[2] + 0.2503 * c(1.96, -1.96)
beta1_cl
# We are 95% confident that beta0 is within the range of (4.524651, 3.543475)
# Question 6. -------------------------------------------------------------
## LINEARITY
g = ggplot(data, aes(x=cats$Hwt, y=cats$Bwt))
g+geom_point()
## CONSTANT VARIANCE AND INDEPENDENT ERRORS
plot(model$fitted, model$residuals,
xlab = "Fitted Values", ylab = "Residual Values",
main = "Residual Plot for Cats Dataset")
abline(h = 0, lty = 2)
## NORMALITY
qqnorm(model$residuals)
qqline(model$residuals)
## The residuals look normal, with a little variance near the tail end.
plot(y=cats$Hwt, x=cats$Bwt, main="Scatterplot of Cats Dataset",
xlab="Body Weight", ylab="Heart Weight")
abline(coef(model), lty = 2)
lines(newdata$Bwt, conf.band[, 2], col = "blue") #Plotting the lower confidence band.
lines(newdata$Bwt, conf.band[, 3], col = "blue") #Plotting the upper confidence band.
lines(newdata$Bwt, pred.band[, 2], col = "red") #Plotting the lower prediction band.
lines(newdata$Bwt, pred.band[, 3], col = "red") #Plotting the upper prediction band.
legend("topleft", c("Regression Line", "Conf. Band", "Pred. Band"),
lty = c(2, 1, 1), col = c("black", "blue", "red"))
data(cats)
library(MASS)
library(ggplot2)
data(cats)
# Question 1a. ------------------------------------------------------------
g = ggplot(data, aes(x=cats$Hwt, y=cats$Bwt))
g+geom_point()
# Yes the data looks like it would be a good fit for simple linear regression because
# there seems to be a positive linear relationship with an even variance throughout the data.
# Note that the point on the far top right may be an influential point for the linear model.
# Question 1b. ------------------------------------------------------------
model = lm(Hwt ~ Bwt, data = cats)
#Manual calculation of simple linear regression coefficients.
## y=b1x+b0
beta1 = sum((cats$Hwt - mean(cats$Hwt)) * (cats$Bwt - mean(cats$Bwt))) /
sum((cats$Hwt - mean(cats$Hwt))^2)
beta0 = mean(cats$Bwt) - beta1*mean(cats$Hwt)
## y=0.16x+1.02
## This shows that at x=0, the Hwt is at 0.16 and we grow by 1.02 per unit of x.
summary(model)
## Since the Bwt has an extremely low p value (<2e-16) The beta1 coefficient is significant.
## However, beta 0 is insignificant with a .607 p value.
## Since the F-statistic's p-value is extremely small (2.2e-16), we can conclude that the overall
## regression is significant. This supports that the beta1 is significant.
## The RSE is 1.452. This means that on average the errors fall 1.452 away from the model.
## r^2 is 0.6466. That means that ~65% of the points can be explained by the model.
# Question 3. --------------------------------------------------------------
plot(y=cats$Hwt, x=cats$Bwt, main="Scatterplot of Cats Dataset",
xlab="Body Weight", ylab="Heart Weight")
abline(coef(model), lty = 2)
# Question 4. -------------------------------------------------------------
plot(model$fitted, model$residuals,
xlab = "Fitted Values", ylab = "Residual Values",
main = "Residual Plot for Cats Dataset")
abline(h = 0, lty = 2)
## The residuals seem normal; the maximum residual is at the far right with ~4.
# Question 5. -------------------------------------------------------------
beta0_cl = model$coefficients[1] + 0.6923 * c(1.96,-1.96)
beta0_cl
# We are 95% confident that beta0 is within the range of (1.000246, -1.713570)
beta1_cl = model$coefficients[2] + 0.2503 * c(1.96, -1.96)
beta1_cl
# We are 95% confident that beta0 is within the range of (4.524651, 3.543475)
# Question 6. -------------------------------------------------------------
## LINEARITY
g = ggplot(data, aes(x=cats$Hwt, y=cats$Bwt))
g+geom_point()
## CONSTANT VARIANCE AND INDEPENDENT ERRORS
plot(model$fitted, model$residuals,
xlab = "Fitted Values", ylab = "Residual Values",
main = "Residual Plot for Cats Dataset")
abline(h = 0, lty = 2)
## NORMALITY
qqnorm(model$residuals)
qqline(model$residuals)
## The residuals look normal, with a little variance near the tail end.
plot(y=cats$Hwt, x=cats$Bwt, main="Scatterplot of Cats Dataset",
xlab="Body Weight", ylab="Heart Weight")
abline(coef(model), lty = 2)
lines(newdata$Bwt, conf.band[, 2], col = "blue") #Plotting the lower confidence band.
lines(newdata$Bwt, conf.band[, 3], col = "blue") #Plotting the upper confidence band.
lines(newdata$Bwt, pred.band[, 2], col = "red") #Plotting the lower prediction band.
lines(newdata$Bwt, pred.band[, 3], col = "red") #Plotting the upper prediction band.
legend("topleft", c("Regression Line", "Conf. Band", "Pred. Band"),
lty = c(2, 1, 1), col = c("black", "blue", "red"))
plot(y=Hwt, x=Bwt, main="Scatterplot of Cats Dataset",
library(MASS)
library(ggplot2)
data(cats)
# Question 1a. ------------------------------------------------------------
g = ggplot(data, aes(x=cats$Hwt, y=cats$Bwt))
g+geom_point()
# Yes the data looks like it would be a good fit for simple linear regression because
# there seems to be a positive linear relationship with an even variance throughout the data.
# Note that the point on the far top right may be an influential point for the linear model.
# Question 1b. ------------------------------------------------------------
model = lm(Hwt ~ Bwt, data = cats)
#Manual calculation of simple linear regression coefficients.
## y=b1x+b0
beta1 = sum((cats$Hwt - mean(cats$Hwt)) * (cats$Bwt - mean(cats$Bwt))) /
sum((cats$Hwt - mean(cats$Hwt))^2)
beta0 = mean(cats$Bwt) - beta1*mean(cats$Hwt)
## y=0.16x+1.02
## This shows that at x=0, the Hwt is at 0.16 and we grow by 1.02 per unit of x.
summary(model)
## Since the Bwt has an extremely low p value (<2e-16) The beta1 coefficient is significant.
## However, beta 0 is insignificant with a .607 p value.
## Since the F-statistic's p-value is extremely small (2.2e-16), we can conclude that the overall
## regression is significant. This supports that the beta1 is significant.
## The RSE is 1.452. This means that on average the errors fall 1.452 away from the model.
## r^2 is 0.6466. That means that ~65% of the points can be explained by the model.
# Question 3. --------------------------------------------------------------
plot(y=cats$Hwt, x=cats$Bwt, main="Scatterplot of Cats Dataset",
xlab="Body Weight", ylab="Heart Weight")
abline(coef(model), lty = 2)
# Question 4. -------------------------------------------------------------
plot(model$fitted, model$residuals,
xlab = "Fitted Values", ylab = "Residual Values",
main = "Residual Plot for Cats Dataset")
abline(h = 0, lty = 2)
## The residuals seem normal; the maximum residual is at the far right with ~4.
# Question 5. -------------------------------------------------------------
beta0_cl = model$coefficients[1] + 0.6923 * c(1.96,-1.96)
beta0_cl
# We are 95% confident that beta0 is within the range of (1.000246, -1.713570)
beta1_cl = model$coefficients[2] + 0.2503 * c(1.96, -1.96)
beta1_cl
# We are 95% confident that beta0 is within the range of (4.524651, 3.543475)
# Question 6. -------------------------------------------------------------
## LINEARITY
g = ggplot(data, aes(x=cats$Hwt, y=cats$Bwt))
g+geom_point()
## CONSTANT VARIANCE AND INDEPENDENT ERRORS
plot(model$fitted, model$residuals,
xlab = "Fitted Values", ylab = "Residual Values",
main = "Residual Plot for Cats Dataset")
abline(h = 0, lty = 2)
## NORMALITY
qqnorm(model$residuals)
qqline(model$residuals)
## The residuals look normal, with a little variance near the tail end.
plot(y=Hwt, x=Bwt, main="Scatterplot of Cats Dataset",
xlab="Body Weight", ylab="Heart Weight")
abline(coef(model), lty = 2)
lines(newdata$Bwt, conf.band[, 2], col = "blue") #Plotting the lower confidence band.
lines(newdata$Bwt, conf.band[, 3], col = "blue") #Plotting the upper confidence band.
lines(newdata$Bwt, pred.band[, 2], col = "red") #Plotting the lower prediction band.
lines(newdata$Bwt, pred.band[, 3], col = "red") #Plotting the upper prediction band.
legend("topleft", c("Regression Line", "Conf. Band", "Pred. Band"),
lty = c(2, 1, 1), col = c("black", "blue", "red"))
library(MASS)
library(ggplot2)
data(cats)
# Question 1a. ------------------------------------------------------------
g = ggplot(data, aes(x=cats$Hwt, y=cats$Bwt))
g+geom_point()
# Yes the data looks like it would be a good fit for simple linear regression because
# there seems to be a positive linear relationship with an even variance throughout the data.
# Note that the point on the far top right may be an influential point for the linear model.
# Question 1b. ------------------------------------------------------------
model = lm(Hwt ~ Bwt, data = cats)
#Manual calculation of simple linear regression coefficients.
## y=b1x+b0
beta1 = sum((cats$Hwt - mean(cats$Hwt)) * (cats$Bwt - mean(cats$Bwt))) /
sum((cats$Hwt - mean(cats$Hwt))^2)
beta0 = mean(cats$Bwt) - beta1*mean(cats$Hwt)
## y=0.16x+1.02
## This shows that at x=0, the Hwt is at 0.16 and we grow by 1.02 per unit of x.
summary(model)
## Since the Bwt has an extremely low p value (<2e-16) The beta1 coefficient is significant.
## However, beta 0 is insignificant with a .607 p value.
## Since the F-statistic's p-value is extremely small (2.2e-16), we can conclude that the overall
## regression is significant. This supports that the beta1 is significant.
## The RSE is 1.452. This means that on average the errors fall 1.452 away from the model.
## r^2 is 0.6466. That means that ~65% of the points can be explained by the model.
# Question 3. --------------------------------------------------------------
plot(y=cats$Hwt, x=cats$Bwt, main="Scatterplot of Cats Dataset",
xlab="Body Weight", ylab="Heart Weight")
abline(coef(model), lty = 2)
# Question 4. -------------------------------------------------------------
plot(model$fitted, model$residuals,
xlab = "Fitted Values", ylab = "Residual Values",
main = "Residual Plot for Cats Dataset")
abline(h = 0, lty = 2)
## The residuals seem normal; the maximum residual is at the far right with ~4.
# Question 5. -------------------------------------------------------------
beta0_cl = model$coefficients[1] + 0.6923 * c(1.96,-1.96)
beta0_cl
# We are 95% confident that beta0 is within the range of (1.000246, -1.713570)
beta1_cl = model$coefficients[2] + 0.2503 * c(1.96, -1.96)
beta1_cl
# We are 95% confident that beta0 is within the range of (4.524651, 3.543475)
# Question 6. -------------------------------------------------------------
## LINEARITY
g = ggplot(data, aes(x=cats$Hwt, y=cats$Bwt))
g+geom_point()
## CONSTANT VARIANCE AND INDEPENDENT ERRORS
plot(model$fitted, model$residuals,
xlab = "Fitted Values", ylab = "Residual Values",
main = "Residual Plot for Cats Dataset")
abline(h = 0, lty = 2)
## NORMALITY
qqnorm(model$residuals)
qqline(model$residuals)
## The residuals look normal, with a little variance near the tail end.
plot(y=Hwt, x=Bwt, main="Scatterplot of Cats Dataset",
xlab="Body Weight", ylab="Heart Weight")
abline(coef(model), lty = 2)
lines(newdata$Bwt, conf.band[, 2], col = "blue") #Plotting the lower confidence band.
lines(newdata$Bwt, conf.band[, 3], col = "blue") #Plotting the upper confidence band.
lines(newdata$Bwt, pred.band[, 2], col = "red") #Plotting the lower prediction band.
lines(newdata$Bwt, pred.band[, 3], col = "red") #Plotting the upper prediction band.
legend("topleft", c("Regression Line", "Conf. Band", "Pred. Band"),
lty = c(2, 1, 1), col = c("black", "blue", "red"))
plot(y=Hwt, x=Bwt, main="Scatterplot of Cats Dataset",
xlab="Body Weight", ylab="Heart Weight")
abline(coef(model), lty = 2)
lines(newdata$Bwt, conf.band[, 2], col = "blue") #Plotting the lower confidence band.
lines(newdata$Bwt, conf.band[, 3], col = "blue") #Plotting the upper confidence band.
lines(newdata$Bwt, pred.band[, 2], col = "red") #Plotting the lower prediction band.
lines(newdata$Bwt, pred.band[, 3], col = "red") #Plotting the upper prediction band.
legend("topleft", c("Regression Line", "Conf. Band", "Pred. Band"),
lty = c(2, 1, 1), col = c("black", "blue", "red"))
newdata = data.frame(Bwt = seq(1, 4, 0.2))
conf.band = predict(model, newdata, interval = "confidence")
pred.band = predict(model, newdata, interval = "prediction")
plot(y=Hwt, x=Bwt, main="Scatterplot of Cats Dataset",
xlab="Body Weight", ylab="Heart Weight")
abline(coef(model), lty = 2)
lines(newdata$Bwt, conf.band[, 2], col = "blue") #Plotting the lower confidence band.
lines(newdata$Bwt, conf.band[, 3], col = "blue") #Plotting the upper confidence band.
lines(newdata$Bwt, pred.band[, 2], col = "red") #Plotting the lower prediction band.
lines(newdata$Bwt, pred.band[, 3], col = "red") #Plotting the upper prediction band.
legend("topleft", c("Regression Line", "Conf. Band", "Pred. Band"),
lty = c(2, 1, 1), col = c("black", "blue", "red"))
newdata = data.frame(Bwt = seq(1, 4, 0.2))
conf.band = predict(model, newdata, interval = "confidence")
pred.band = predict(model, newdata, interval = "prediction")
plot(y=cats$Hwt, x=cats$Bwt, main="Scatterplot of Cats Dataset",
xlab="Body Weight", ylab="Heart Weight")
abline(coef(model), lty = 2)
lines(newdata$Bwt, conf.band[, 2], col = "blue") #Plotting the lower confidence band.
lines(newdata$Bwt, conf.band[, 3], col = "blue") #Plotting the upper confidence band.
lines(newdata$Bwt, pred.band[, 2], col = "red") #Plotting the lower prediction band.
lines(newdata$Bwt, pred.band[, 3], col = "red") #Plotting the upper prediction band.
legend("topleft", c("Regression Line", "Conf. Band", "Pred. Band"),
lty = c(2, 1, 1), col = c("black", "blue", "red"))
predict(model, newdata, interval = "confidence")
predict(model, newdata, interval = "prediction")
predict(model, newdata, interval = "confidence")
predict(model, newdata, interval = "confidence")
predict(model, newdata, interval = "prediction")
?predict
predict_list = data.frame(Bwt = c(2.8, 5, 10))
predict(model, predict_list, interval = "confidence")
predict(model, predict_list, interval = "prediction")
bc = boxCox(model)
lambda = bc$x[which(bc$y == max(bc$y))]
lambda
Hwt.bc = (cats$Hwt^lambda - 1) / lambda
Hwt.bc
Hwt_new = (cats$Hwt^lambda - 1) / lambda
model_new = lm(Hwt.bc ~ cats$Bwt)
model_transformed = lm(Hwt.bc ~ cats$Bwt)
plot(y=Hwt.bc, x=cats$Bwt, main="Scatterplot of Cats Dataset",
xlab="Body Weight (kg)", ylab="Heart Weight (g) box-cox")
abline(model.bc)
-------------------------------------------------
plot(y=Hwt_new, x=cats$Bwt, main="Scatterplot of Cats Dataset",
xlab="Body Weight (kg)", ylab="Heart Weight (g) box-cox")
abline(model.bc)
abline(model_transformed)
plot(y=Hwt_new, x=cats$Bwt, main="Scatterplot of Cats Dataset",
xlab="Body Weight (kg)", ylab="Heart Weight (g) box-cox")
abline(model_transformed)
plot(model.bc$residuals)
abline(0,0)
# Assumption of linearity from the scatter plot above
# Assumption of constant variance in errors from the residuals plot
qqnorm(model$residuals)
qqline(model$residuals)
plot(model.bc$residuals)
abline(0,0)
plot(y=Hwt_new, x=cats$Bwt, main="Scatterplot of Cats Dataset",
xlab="Body Weight (kg)", ylab="Heart Weight (g) box-cox")
abline(model_transformed)
bc = boxcox(model.bc)
bc = boxcox(model_transformed)
setwd("~/Documents/Project/What Are Those?/data")
?read.csv
read.csv("flightclub.csv", stringsAsFactors = FALSE)
data = read.csv("flightclub.csv", stringsAsFactors = FALSE)
summary(data)
data$image
image_list = data$image
?save
?save.csv
write.csv(image_list, file="fc1.csv")
write.csv(image_list, file="fc1.txt")
write.csv(image_list, file="fc1.txt", index=FALSE)
?write.csv
write.csv(image_list, file="fc1.txt", row.names=FALSE, col.names=FALSE)
write.csv(image_list, file="fc1.txt", col.names=FALSE)
image_list
head(image_list)
write.csv(image_list, file="fc1.txt", row.names=FALSE)
image_list
image_list = print.data$image
image_list = print(data$image)
image_list = print(data$image)
image_list[1]
write.csv(image_list, file="fc1.txt", row.names=FALSE)
image_list = print(data$image, quote=FALSE)
image_list[1]
image_list = print(data$image, quote=FALSE)
image_list[1]
?write.csv
write.csv(image_list, file="fc1.txt", row.names=FALSE, quote=FALSE)
write.csv(image_list, file="fc1.txt", row.names=FALSE, quote=FALSE)
image_list = print(data$image, quote=FALSE)
data
head(data)
library(trimr)
library(stringr)
str_trim(data$product_name)
data$product_name = str_trim(data$product_name)
head(data$product_name)
library(dplyr)
data %>% mutate(photo_index = seq(1:length(image_list)))
head(data)
head(data$photo_index)
data %>% mutate(photo_index = seq(1:length(image_list)))
head(data$photo_index)
seq(1:length(image_list))
data$photo_index = seq(1:length(image_list))
head(data$photo_index)
head(data$photo_index)
colnames(data)
data$brand
data %>% group_by(brand) %>% summarize(count=n()) %>% arrange(desc(count))
tmp
tmp = data %>% group_by(brand) %>% summarize(count=n()) %>% arrange(desc(count))
tmp
table(tmp)
rm(tmp)
ata %>% group_by(brand) %>% summarize(count=n()) %>% arrange(desc(count))
data %>% group_by(brand) %>% summarize(count=n()) %>% arrange(desc(count))
library(data.table)
?DT
library(DT)
datatable(data %>% group_by(brand) %>% summarize(count=n()) %>% arrange(desc(count)))
datatable(data %>% group_by(brand) %>% summarize(count=n()) %>% arrange(desc(count)))
datatable(data %>% group_by(brand) %>% summarize(count=n()) %>% arrange(desc(count)))
jordans = data %>% filter(brand=="jordan")
jordans
jordans_dump = jordans %>% select(image, photo_index)
write.csv(jordans_dump, file="jordans.txt", row.names=FALSE, quote=FALSE)
library(curl)
jordans_dump = jordans %>% select(image, photo_index)
head(jordans_dump)
download.file(jordans$image, "~/Documents/Project/What\ Are\ Those\?/images")
download.file(jordans$image, "~/Documents/Project/What\ Are\ Those?/images")
jordans$image
download.file(jordans$image[0], "~/Documents/Project/What\ Are\ Those?/images")
download.file("http://www.flightclub.com/media/catalog/product/cache/1/small_image/360x257/9df78eab33525d08d6e5fb8d27136e95/0/1/012336_1.jpg" , "~/Documents/Project/What\ Are\ Those?/images")
download.file("http://www.flightclub.com/media/catalog/product/cache/1/small_image/360x257/9df78eab33525d08d6e5fb8d27136e95/0/1/012336_1.jpg", "~/Documents/Project/What\ Are\ Those?/images")
download.file("http://www.flightclub.com/media/catalog/product/cache/1/small_image/360x257/9df78eab33525d08d6e5fb8d27136e95/0/1/012336_1.jpg", "~/Documents/Project/What\ Are\ Those?/images/")
download.file(jordans$image[1], basename(jordans$image[1])
download.file(jordans$image[1], basename(jordans$image[1]))
download.file(jordans$image[1], basename(jordans$image[1]))
getwd()
download.file(jordans$image[1], jordans$photo_index[1])
basename(jordans$image[1])
download.file(jordans$image[1], jordans$photo_index[1])
jordans$photo_index[1]
download.file(jordans$image[1], as.character(jordans$photo_index[1]))
data$photo_name = paste0(as.character(data$photo_index),".jpg")
head(data$photo_name)
jordans = data %>% filter(brand=="jordan")
jordans_dump = jordans %>% select(image, photo_index, photo_name)
download.file(jordans$image[1], photo_name)
download.file(jordans$image[1], jordans$photo_name)
download.file(jordans$image[1], jordans$photo_name[1])
setwd("~/Documents/Project/What\ Are\ Those?/jordans")
length(jordans)
jordans = data %>% filter(brand=="jordan")
jordans_dump = jordans %>% select(image, photo_index, photo_name)
jordans_dump
jordans_images = jordans %>% select(image, photo_index, photo_name)
rm(jordans_dump)
length(jordans_images)
nrow(jordans_images)
setwd("~/Documents/Project/What\ Are\ Those?/jordans")
for(i in seq(1:nrow(jordans_images))){
print(paste0("Downloading Image", i))
download.file(jordans_images$image[i], jordans_images$photo_name[i])
}
?download.file
print(paste0(paste0(i,"/"),as.character(nrow(jordans_images))))
nike = data %>% filter(brand=="nike")
nike = data %>% filter(brand=="nike")
nike_images = nike %>% select(image, photo_index, photo_name)
setwd("~/Documents/Project/What\ Are\ Those?/classes/nike")
nike = data %>% filter(brand=="nike")
nike_images = nike %>% select(image, photo_index, photo_name)
for(i in seq(1:nrow(nike_images))){
print(paste0(paste0(i,"/"),as.character(nrow(nike_images))))
download.file(nike_images$image[i], nike_images$photo_name[i])
}
